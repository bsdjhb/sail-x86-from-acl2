(include-book "projects/x86isa/machine/inst-listing"  :ttags :all :dir :system)
(in-package "X86ISA")
(define get-opcodes ((inst-lst inst-list-p))
  (b* (((when (endp inst-lst)) nil)
       (inst (car inst-lst))
       ((inst inst))
       (opcode (inst->opcode inst))
       (op (loghead 8 (opcode->op opcode)))
       (rest (get-opcodes (cdr inst-lst))))
    (append (list op) rest)))
(length (remove-duplicates (get-opcodes (select-insts *one-byte-opcode-map* :fn? t))))
(length (remove-duplicates (get-opcodes (select-insts *two-byte-opcode-map* :fn? t))))
(length (remove-duplicates (get-opcodes (select-insts *0F-38-three-byte-opcode-map* :fn? t))))
(length (remove-duplicates (get-opcodes (select-insts *0F-3A-three-byte-opcode-map* :fn? t))))
